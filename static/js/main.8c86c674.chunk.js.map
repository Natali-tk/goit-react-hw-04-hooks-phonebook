{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","e","preventDefault","props","onSubmitContact","reset","this","onSubmit","className","s","form","lable","input","type","pattern","title","onChange","required","submitBtn","Component","PropsType","PropTypes","func","isRequired","ContactList","contacts","onDeleteClick","contactList","map","id","contact","icon","buttonDelete","onClick","Filter","changeFilterInput","findFild","inputFind","App","filter","submitContact","addContact","uuidv4","find","toLowerCase","alert","deleteContact","prevState","target","onFilteredContacts","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c86c674.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2kMnz\",\"lable\":\"ContactForm_lable__3lx2T\",\"input\":\"ContactForm_input__xFUvd\",\"submitBtn\":\"ContactForm_submitBtn__L2U7o\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmitContact(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label className={s.lable}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label className={s.lable}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={s.submitBtn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nContactForm.PropsType = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport { MdContactPhone } from 'react-icons/md';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteClick }) => (\r\n  <ul className={s.contactList}>\r\n    {contacts.map(({ id, name, number }) => {\r\n      return (\r\n        <li key={id} className={s.contact}>\r\n          <MdContactPhone className={s.icon} />\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            className={s.buttonDelete}\r\n            type=\"button\"\r\n            onClick={() => onDeleteClick(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, changeFilterInput }) => (\r\n  <label className={s.findFild}>\r\n    Find contacts by name\r\n    <input\r\n      className={s.inputFind}\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={value}\r\n      onChange={changeFilterInput}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  changeFilterInput: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  submitContact = ({ name, number }) => {\n    const addContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.state.contacts.find(\n      contact => contact.name.toLowerCase() === addContact.name.toLowerCase(),\n    )\n      ? alert(`${name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [addContact, ...contacts],\n        }));\n  };\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n  changeFilterInput = e => {\n    this.setState({ filter: e.target.value });\n  };\n  onFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmitContact={this.submitContact} />\n        <h2>Contacts </h2>\n        <Filter value={filter} changeFilterInput={this.changeFilterInput} />\n        <ContactList\n          contacts={this.onFilteredContacts()}\n          onDeleteClick={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__1wbpw\",\"buttonDelete\":\"ContactList_buttonDelete__1Wx3o\",\"icon\":\"ContactList_icon__mOvsP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findFild\":\"Filter_findFild__2CCI7\",\"inputFind\":\"Filter_inputFind__2EUQU\"};"],"sourceRoot":""}